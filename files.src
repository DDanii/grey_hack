get_files = function(shell, root, filter = null, fo = false)
	result = []
	folders = [root]
	while folders.len > 0
		current = folders.pop()
		folders = folders + current.get_folders()
		
		if fo and (filter == null or f.path.indexOf(filter) >= 0) then result.push(current)

		if filter then
			for f in current.get_files()
				if f.path.indexOf(filter) >= 0 then
					result.push(f)
				end if
			end for
		else
			result = result + current.get_files()
		end if
	end while
	return result
end function

get_executable = function(shell, cmd)
	cmp = shell.host_computer
	if cmd then
		f = cmp.File(cmd)
		if f then return f.path
		
		f = cmp.File(current_path + "/" + cmd)
		if f then return f.path
		
		f = cmp.File("/bin/" + cmd)
		if f then return f.path
		
		f = cmp.File("/usr/bin/" + cmd)
		if f then return f.path
		
	end if
	return null
end function

get_absolute_path = function(shell, p)
	if p then
		f = shell.host_computer.File(p)
		if f then return f
		
		f = shell.host_computer.File(current_path + "/" + p)
		if f then return f
	end if
	return null
end function

filter = null
execute = null
offset = 0
shell = get_shell()
readable = false
permissions = false
include_folder = false
root = shell.host_computer.File("/")

cursor = 0
while cursor < params.len
	p = params[cursor]
	
	if p == "-h" or p == "--help" then 
        exit("<b>Usage: " + program_path.split("/")[-1] + "[-h -r -x cmd -l /] [filter]</b>")
    else if p == "-x" then
		if cursor + 1 >= params.len then exit("Missing command parameter.")
		execute = get_executable(shell, params[cursor + 1])
		if not execute then exit("Command not found: " + params[cursor + 1] + ".")
		cursor = cursor + 1
    else if p == "-l" then
		if cursor + 1 >= params.len then exit("Missing root parameter.")
		root = get_absolute_path(shell, params[cursor + 1])
		if not root or not root.is_folder() then exit("Root folder not found: " + params[cursor + 1] + ".")
		cursor = cursor + 1
    else if p == "-r" then
        readable = true
	else if p == "-p" then
		permissions = true
    else if p == "-fo" then
		include_folder = true
    else
        filter = p
	end if

	cursor = cursor + 1
end while

files = get_files(shell, root, filter, include_folder)
if permissions then
	output = "USER GROUP PERMISSIONS B F PATH"
	for f in files
		output = output + "\n" + (f.owner + " " + f.group + " " + f.permissions + " " + f.is_binary + " " + f.is_folder + " " + f.path)
	end for
	print(format_columns(output))
else
for f in files
    if readable and not f.has_permission("r") then continue

    if execute then 
        shell.launch(execute, f.path)
    else		
		print(f.path)
    end if
end for
end if